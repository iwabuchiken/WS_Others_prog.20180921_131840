[20181124_122550 / libfx_2.py:130] =========== _BUSL_3__DetectPatterns__Two_Tops__V_5
source = 44_3.2_15_file-io.EURJPY.Period-H1.Days-5000.Bars-120000.20180903_135340.(m-11).20180926_205209.(new).(SHRINK-50).csv

[20181124_122550 / libfx_2.py:215] start for-loop ------------------- (0)

[20181124_122550 / libfx_2.py:254] (j1 : N) flg_Dat --> not set (False, 2017.11.13 16:00)

[20181124_122550 / libfx_2.py:349] (j2 : N) d0 < 0 (d0 = -0.072)

[20181124_122550 / libfx_2.py:215] start for-loop ------------------- (1)

[20181124_122550 / libfx_2.py:254] (j1 : N) flg_Dat --> not set (False, 2017.11.13 17:00)

[20181124_122550 / libfx_2.py:285] (j2 : Y) d0 => 0 (d0 = 0.038)

[20181124_122551 / libfx_2.py:320] (j2 : Y : 1) dat --> set (2017.11.13 17:00)

[20181124_122551 / libfx_2.py:215] start for-loop ------------------- (2)

[20181124_122551 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.13 18:00)

[20181124_122551 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 11:00)

[20181124_122551 / libfx_2.py:1996] [is_Trend__Flat] (j1 : N : 1) less than 5 (2)

[20181124_122551 / libfx_2.py:426] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.13 18:00)

[20181124_122551 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.13 18:00)

[20181124_122551 / libfx_2.py:533] (j4 : N) d0 ==> -0.137 (2017.11.13 18:00)

[20181124_122551 / libfx_2.py:564] (j5 : Y) 
e0.price_Close = 131.970
ts_DownBar_For_A1__Price = 132.069 (2017.11.13 18:00)

[20181124_122551 / libfx_2.py:594] dat --> reset done

[20181124_122551 / libfx_2.py:215] start for-loop ------------------- (3)

[20181124_122551 / libfx_2.py:254] (j1 : N) flg_Dat --> not set (False, 2017.11.13 19:00)

[20181124_122551 / libfx_2.py:349] (j2 : N) d0 < 0 (d0 = -0.006)

[20181124_122551 / libfx_2.py:215] start for-loop ------------------- (4)

[20181124_122551 / libfx_2.py:254] (j1 : N) flg_Dat --> not set (False, 2017.11.13 20:00)

[20181124_122551 / libfx_2.py:285] (j2 : Y) d0 => 0 (d0 = 0.093)

[20181124_122551 / libfx_2.py:320] (j2 : Y : 1) dat --> set (2017.11.13 20:00)

[20181124_122551 / libfx_2.py:215] start for-loop ------------------- (5)

[20181124_122551 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.13 21:00)

[20181124_122551 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 14:00)

[20181124_122551 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (5)

[20181124_122551 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 13:00

[20181124_122551 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = -0.030 (UTC = 2017.11.13 13:00)
<avg values>
132.103	132.088	132.038	131.968	132.012	



[20181124_122551 / libfx_2.py:2182] [is_Trend__Flat] (j2 : N) 2017.11.13 13:00	-0.030 (ts = 0.010)

[20181124_122551 / libfx_2.py:426] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.13 21:00)

[20181124_122551 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.13 21:00)

[20181124_122551 / libfx_2.py:533] (j4 : N) d0 ==> -0.014 (2017.11.13 21:00)

[20181124_122551 / libfx_2.py:624] (j5 : N)
e0.price_Close = 132.050
dat['price_start'] = 131.965
ts_DownBar_For_A1__Price = 131.965 (2017.11.13 21:00)

[20181124_122551 / libfx_2.py:647] (j5 : N : 1) dat ==> updated
e0.price_Close = 132.050
dat['price_current'] = 132.050
dat['index_current'] = 6
(2017.11.13 21:00)

[20181124_122552 / libfx_2.py:215] start for-loop ------------------- (6)

[20181124_122552 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.13 22:00)

[20181124_122552 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 15:00)

[20181124_122552 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (6)

[20181124_122552 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 14:00

[20181124_122552 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = -0.009 (UTC = 2017.11.13 14:00)
<avg values>
132.088	132.038	131.968	132.012	132.057	



[20181124_122552 / libfx_2.py:2163] [is_Trend__Flat] (j2 : Y) 2017.11.13 14:00	-0.009 (ts = 0.010)

[20181124_122552 / libfx_2.py:450] (j1 : Y : 1 / j1.1 : Y : 1) trend --> flat (2017.11.13 22:00)

[20181124_122552 / libfx_2.py:478] dat --> reset done

[20181124_122552 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.13 22:00)

[20181124_122552 / libfx_2.py:671] (j4 : Y) d0 ==> 0.198 (2017.11.13 22:00)

[20181124_122552 / libfx_2.py:713] (j4 : Y : 2) dat ==> updated (2017.11.13 22:00)
dat[price_anchor] = 132.247
dat[index_anchor] = 7
dat[price_current] = 132.247
dat[index_current] = 7

[20181124_122552 / libfx_2.py:215] start for-loop ------------------- (7)

[20181124_122552 / libfx_2.py:254] (j1 : N) flg_Dat --> not set (False, 2017.11.13 23:00)

[20181124_122552 / libfx_2.py:285] (j2 : Y) d0 => 0 (d0 = 0.063)

[20181124_122552 / libfx_2.py:320] (j2 : Y : 1) dat --> set (2017.11.13 23:00)

[20181124_122552 / libfx_2.py:215] start for-loop ------------------- (8)

[20181124_122552 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.14 00:00)

[20181124_122552 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 17:00)

[20181124_122552 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (8)

[20181124_122552 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 16:00

[20181124_122552 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.076 (UTC = 2017.11.13 16:00)
<avg values>
131.968	132.012	132.057	132.148	132.281	



[20181124_122553 / libfx_2.py:2182] [is_Trend__Flat] (j2 : N) 2017.11.13 16:00	0.076 (ts = 0.010)

[20181124_122553 / libfx_2.py:426] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 00:00)

[20181124_122553 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.14 00:00)

[20181124_122553 / libfx_2.py:671] (j4 : Y) d0 ==> 0.083 (2017.11.14 00:00)

[20181124_122553 / libfx_2.py:713] (j4 : Y : 2) dat ==> updated (2017.11.14 00:00)
dat[price_anchor] = 132.396
dat[index_anchor] = 9
dat[price_current] = 132.396
dat[index_current] = 9

[20181124_122553 / libfx_2.py:215] start for-loop ------------------- (9)

[20181124_122553 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.14 01:00)

[20181124_122553 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 18:00)

[20181124_122553 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (9)

[20181124_122553 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 17:00

[20181124_122553 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.091 (UTC = 2017.11.13 17:00)
<avg values>
132.012	132.057	132.148	132.281	132.354	



[20181124_122553 / libfx_2.py:2182] [is_Trend__Flat] (j2 : N) 2017.11.13 17:00	0.091 (ts = 0.010)

[20181124_122553 / libfx_2.py:426] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 01:00)

[20181124_122553 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.14 01:00)

[20181124_122553 / libfx_2.py:671] (j4 : Y) d0 ==> 0.045 (2017.11.14 01:00)

[20181124_122553 / libfx_2.py:713] (j4 : Y : 2) dat ==> updated (2017.11.14 01:00)
dat[price_anchor] = 132.440
dat[index_anchor] = 10
dat[price_current] = 132.440
dat[index_current] = 10

[20181124_122553 / libfx_2.py:215] start for-loop ------------------- (10)

[20181124_122553 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.14 02:00)

[20181124_122553 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 19:00)

[20181124_122553 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (10)

[20181124_122553 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 18:00

[20181124_122553 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.093 (UTC = 2017.11.13 18:00)
<avg values>
132.057	132.148	132.281	132.354	132.418	



[20181124_122553 / libfx_2.py:2182] [is_Trend__Flat] (j2 : N) 2017.11.13 18:00	0.093 (ts = 0.010)

[20181124_122553 / libfx_2.py:426] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 02:00)

[20181124_122553 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.14 02:00)

[20181124_122553 / libfx_2.py:671] (j4 : Y) d0 ==> 0.074 (2017.11.14 02:00)

[20181124_122553 / libfx_2.py:713] (j4 : Y : 2) dat ==> updated (2017.11.14 02:00)
dat[price_anchor] = 132.512
dat[index_anchor] = 11
dat[price_current] = 132.512
dat[index_current] = 11

[20181124_122553 / libfx_2.py:215] start for-loop ------------------- (11)

[20181124_122553 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.14 03:00)

[20181124_122553 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 20:00)

[20181124_122553 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (11)

[20181124_122553 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 19:00

[20181124_122553 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.079 (UTC = 2017.11.13 19:00)
<avg values>
132.148	132.281	132.354	132.418	132.475	



[20181124_122553 / libfx_2.py:2182] [is_Trend__Flat] (j2 : N) 2017.11.13 19:00	0.079 (ts = 0.010)

[20181124_122553 / libfx_2.py:426] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 03:00)

[20181124_122553 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.14 03:00)

[20181124_122553 / libfx_2.py:671] (j4 : Y) d0 ==> 0.007 (2017.11.14 03:00)

[20181124_122553 / libfx_2.py:713] (j4 : Y : 2) dat ==> updated (2017.11.14 03:00)
dat[price_anchor] = 132.516
dat[index_anchor] = 12
dat[price_current] = 132.516
dat[index_current] = 12

[20181124_122553 / libfx_2.py:215] start for-loop ------------------- (12)

[20181124_122554 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.14 04:00)

[20181124_122554 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 21:00)

[20181124_122554 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (12)

[20181124_122554 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 20:00

[20181124_122554 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.058 (UTC = 2017.11.13 20:00)
<avg values>
132.281	132.354	132.418	132.475	132.512	



[20181124_122554 / libfx_2.py:2182] [is_Trend__Flat] (j2 : N) 2017.11.13 20:00	0.058 (ts = 0.010)

[20181124_122554 / libfx_2.py:426] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 04:00)

[20181124_122554 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.14 04:00)

[20181124_122554 / libfx_2.py:533] (j4 : N) d0 ==> -0.020 (2017.11.14 04:00)

[20181124_122554 / libfx_2.py:624] (j5 : N)
e0.price_Close = 132.497
dat['price_start'] = 132.249
ts_DownBar_For_A1__Price = 132.249 (2017.11.14 04:00)

[20181124_122554 / libfx_2.py:647] (j5 : N : 1) dat ==> updated
e0.price_Close = 132.497
dat['price_current'] = 132.497
dat['index_current'] = 13
(2017.11.14 04:00)

[20181124_122554 / libfx_2.py:215] start for-loop ------------------- (13)

[20181124_122554 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.14 05:00)

[20181124_122554 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 22:00)

[20181124_122554 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (13)

[20181124_122554 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 21:00

[20181124_122554 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.040 (UTC = 2017.11.13 21:00)
<avg values>
132.354	132.418	132.475	132.512	132.507	



[20181124_122554 / libfx_2.py:2182] [is_Trend__Flat] (j2 : N) 2017.11.13 21:00	0.040 (ts = 0.010)

[20181124_122554 / libfx_2.py:426] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 05:00)

[20181124_122554 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.14 05:00)

[20181124_122554 / libfx_2.py:671] (j4 : Y) d0 ==> 0.047 (2017.11.14 05:00)

[20181124_122554 / libfx_2.py:713] (j4 : Y : 2) dat ==> updated (2017.11.14 05:00)
dat[price_anchor] = 132.545
dat[index_anchor] = 14
dat[price_current] = 132.545
dat[index_current] = 14

[20181124_122554 / libfx_2.py:215] start for-loop ------------------- (14)

[20181124_122554 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.14 06:00)

[20181124_122554 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 23:00)

[20181124_122554 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (14)

[20181124_122554 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 22:00

[20181124_122554 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.024 (UTC = 2017.11.13 22:00)
<avg values>
132.418	132.475	132.512	132.507	132.522	



[20181124_122554 / libfx_2.py:2182] [is_Trend__Flat] (j2 : N) 2017.11.13 22:00	0.024 (ts = 0.010)

[20181124_122554 / libfx_2.py:426] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 06:00)

[20181124_122554 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.14 06:00)

[20181124_122554 / libfx_2.py:671] (j4 : Y) d0 ==> 0.003 (2017.11.14 06:00)

[20181124_122555 / libfx_2.py:713] (j4 : Y : 2) dat ==> updated (2017.11.14 06:00)
dat[price_anchor] = 132.551
dat[index_anchor] = 15
dat[price_current] = 132.551
dat[index_current] = 15

[20181124_122555 / libfx_2.py:215] start for-loop ------------------- (15)

[20181124_122555 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.14 07:00)

[20181124_122555 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 00:00)

[20181124_122555 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (15)

[20181124_122555 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 23:00

[20181124_122555 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.016 (UTC = 2017.11.13 23:00)
<avg values>
132.475	132.512	132.507	132.522	132.549	



[20181124_122555 / libfx_2.py:2182] [is_Trend__Flat] (j2 : N) 2017.11.13 23:00	0.016 (ts = 0.010)

[20181124_122555 / libfx_2.py:426] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 07:00)

[20181124_122555 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.14 07:00)

[20181124_122555 / libfx_2.py:533] (j4 : N) d0 ==> -0.018 (2017.11.14 07:00)

[20181124_122555 / libfx_2.py:624] (j5 : N)
e0.price_Close = 132.510
dat['price_start'] = 132.249
ts_DownBar_For_A1__Price = 132.249 (2017.11.14 07:00)

[20181124_122555 / libfx_2.py:647] (j5 : N : 1) dat ==> updated
e0.price_Close = 132.510
dat['price_current'] = 132.510
dat['index_current'] = 16
(2017.11.14 07:00)

[20181124_122555 / libfx_2.py:215] start for-loop ------------------- (16)

[20181124_122555 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.14 08:00)

[20181124_122555 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 01:00)

[20181124_122555 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (16)

[20181124_122555 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 00:00

[20181124_122555 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.006 (UTC = 2017.11.14 00:00)
<avg values>
132.512	132.507	132.522	132.549	132.519	



[20181124_122555 / libfx_2.py:2163] [is_Trend__Flat] (j2 : Y) 2017.11.14 00:00	0.006 (ts = 0.010)

[20181124_122555 / libfx_2.py:450] (j1 : Y : 1 / j1.1 : Y : 1) trend --> flat (2017.11.14 08:00)

[20181124_122555 / libfx_2.py:478] dat --> reset done

[20181124_122555 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.14 08:00)

[20181124_122555 / libfx_2.py:671] (j4 : Y) d0 ==> 0.006 (2017.11.14 08:00)

[20181124_122555 / libfx_2.py:713] (j4 : Y : 2) dat ==> updated (2017.11.14 08:00)
dat[price_anchor] = 132.516
dat[index_anchor] = 17
dat[price_current] = 132.516
dat[index_current] = 17

[20181124_122555 / libfx_2.py:215] start for-loop ------------------- (17)

[20181124_122555 / libfx_2.py:254] (j1 : N) flg_Dat --> not set (False, 2017.11.14 09:00)

[20181124_122555 / libfx_2.py:285] (j2 : Y) d0 => 0 (d0 = 0.128)

[20181124_122555 / libfx_2.py:320] (j2 : Y : 1) dat --> set (2017.11.14 09:00)

[20181124_122555 / libfx_2.py:215] start for-loop ------------------- (18)

[20181124_122555 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.14 10:00)

[20181124_122555 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 03:00)

[20181124_122555 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (18)

[20181124_122555 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 02:00

[20181124_122555 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.008 (UTC = 2017.11.14 02:00)
<avg values>
132.522	132.549	132.519	132.513	132.580	



[20181124_122555 / libfx_2.py:2163] [is_Trend__Flat] (j2 : Y) 2017.11.14 02:00	0.008 (ts = 0.010)

[20181124_122555 / libfx_2.py:450] (j1 : Y : 1 / j1.1 : Y : 1) trend --> flat (2017.11.14 10:00)

[20181124_122555 / libfx_2.py:478] dat --> reset done

[20181124_122555 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.14 10:00)

[20181124_122555 / libfx_2.py:671] (j4 : Y) d0 ==> 0.013 (2017.11.14 10:00)

[20181124_122555 / libfx_2.py:713] (j4 : Y : 2) dat ==> updated (2017.11.14 10:00)
dat[price_anchor] = 132.656
dat[index_anchor] = 19
dat[price_current] = 132.656
dat[index_current] = 19

[20181124_122555 / libfx_2.py:215] start for-loop ------------------- (19)

[20181124_122555 / libfx_2.py:254] (j1 : N) flg_Dat --> not set (False, 2017.11.14 11:00)

[20181124_122555 / libfx_2.py:349] (j2 : N) d0 < 0 (d0 = -0.021)

[20181124_122555 / libfx_2.py:215] start for-loop ------------------- (20)

[20181124_122555 / libfx_2.py:254] (j1 : N) flg_Dat --> not set (False, 2017.11.14 12:00)

[20181124_122556 / libfx_2.py:349] (j2 : N) d0 < 0 (d0 = -0.011)

[20181124_122556 / libfx_2.py:215] start for-loop ------------------- (21)

[20181124_122556 / libfx_2.py:254] (j1 : N) flg_Dat --> not set (False, 2017.11.14 13:00)

[20181124_122556 / libfx_2.py:285] (j2 : Y) d0 => 0 (d0 = 0.030)

[20181124_122556 / libfx_2.py:320] (j2 : Y : 1) dat --> set (2017.11.14 13:00)

[20181124_122556 / libfx_2.py:215] start for-loop ------------------- (22)

[20181124_122556 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.14 14:00)

[20181124_122556 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 07:00)

[20181124_122556 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (22)

[20181124_122556 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 06:00

[20181124_122556 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.010 (UTC = 2017.11.14 06:00)
<avg values>
132.580	132.649	132.645	132.628	132.639	



[20181124_122556 / libfx_2.py:2163] [is_Trend__Flat] (j2 : Y) 2017.11.14 06:00	0.010 (ts = 0.010)

[20181124_122556 / libfx_2.py:450] (j1 : Y : 1 / j1.1 : Y : 1) trend --> flat (2017.11.14 14:00)

[20181124_122556 / libfx_2.py:478] dat --> reset done

[20181124_122556 / libfx_2.py:510] (j3 : N) flg_A1_tmp ==> False (2017.11.14 14:00)

[20181124_122556 / libfx_2.py:671] (j4 : Y) d0 ==> 0.004 (2017.11.14 14:00)

[20181124_122556 / libfx_2.py:713] (j4 : Y : 2) dat ==> updated (2017.11.14 14:00)
dat[price_anchor] = 132.657
dat[index_anchor] = 23
dat[price_current] = 132.657
dat[index_current] = 23

[20181124_122556 / libfx_2.py:215] start for-loop ------------------- (23)

[20181124_122556 / libfx_2.py:254] (j1 : N) flg_Dat --> not set (False, 2017.11.14 15:00)

[20181124_122556 / libfx_2.py:349] (j2 : N) d0 < 0 (d0 = -0.081)

[20181124_122556 / libfx_2.py:215] start for-loop ------------------- (24)

[20181124_122556 / libfx_2.py:254] (j1 : N) flg_Dat --> not set (False, 2017.11.14 16:00)

[20181124_122556 / libfx_2.py:285] (j2 : Y) d0 => 0 (d0 = 0.370)

[20181124_122556 / libfx_2.py:320] (j2 : Y : 1) dat --> set (2017.11.14 16:00)

[20181124_122556 / libfx_2.py:215] start for-loop ------------------- (25)

[20181124_122556 / libfx_2.py:382] (j1 : Y) flg_Dat ==> True (2017.11.14 17:00)

[20181124_122556 / libfx_2.py:404] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 10:00)

[20181124_122556 / libfx_2.py:2018] [is_Trend__Flat] (j1 : Y) equal or more than 5 (25)

[20181124_122556 / libfx_2.py:2042] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 09:00

[20181124_122556 / libfx_2.py:2115] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.024 (UTC = 2017.11.14 09:00)
<avg values>
132.628	132.639	132.655	132.617	132.761	




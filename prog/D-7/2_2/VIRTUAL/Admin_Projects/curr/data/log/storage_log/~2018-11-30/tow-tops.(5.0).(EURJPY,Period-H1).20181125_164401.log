[20181125_164401 / libfx_2.py:131] =========== _BUSL_3__DetectPatterns__Two_Tops__V_5
source = 44_3.2_15_file-io.EURJPY.Period-H1.Days-5000.Bars-120000.20180903_135340.(m-11).20180926_205209.(new).(SHRINK-50).csv

[20181125_164401 / libfx_2.py:216] start for-loop ------------------- (0)

[20181125_164401 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.13 16:00)

[20181125_164401 / libfx_2.py:350] (j2 : N) d0 < 0 (d0 = -0.072)

[20181125_164401 / libfx_2.py:216] start for-loop ------------------- (1)

[20181125_164401 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.13 17:00)

[20181125_164401 / libfx_2.py:286] (j2 : Y) d0 => 0 (d0 = 0.038)

[20181125_164401 / libfx_2.py:321] (j2 : Y : 1) dat --> set (2017.11.13 17:00)

[20181125_164401 / libfx_2.py:216] start for-loop ------------------- (2)

[20181125_164401 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.13 18:00)

[20181125_164401 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 11:00)

[20181125_164401 / libfx_2.py:2003] [is_Trend__Flat] (j1 : N : 1) less than 5 (2)

[20181125_164401 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.13 18:00)

[20181125_164401 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.13 18:00)

[20181125_164401 / libfx_2.py:540] (j4 : N) d0 ==> -0.137 (2017.11.13 18:00)

[20181125_164401 / libfx_2.py:571] (j5 : Y) 
e0.price_Close = 131.970
ts_DownBar_For_A1__Price = 132.069 (2017.11.13 18:00)

[20181125_164401 / libfx_2.py:601] dat --> reset done

[20181125_164401 / libfx_2.py:216] start for-loop ------------------- (3)

[20181125_164401 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.13 19:00)

[20181125_164402 / libfx_2.py:350] (j2 : N) d0 < 0 (d0 = -0.006)

[20181125_164402 / libfx_2.py:216] start for-loop ------------------- (4)

[20181125_164402 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.13 20:00)

[20181125_164402 / libfx_2.py:286] (j2 : Y) d0 => 0 (d0 = 0.093)

[20181125_164402 / libfx_2.py:321] (j2 : Y : 1) dat --> set (2017.11.13 20:00)

[20181125_164402 / libfx_2.py:216] start for-loop ------------------- (5)

[20181125_164402 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.13 21:00)

[20181125_164402 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 14:00)

[20181125_164402 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (5)

[20181125_164402 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 13:00

[20181125_164402 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = -0.030 (UTC = 2017.11.13 13:00)
<avg values>
132.103	132.088	132.038	131.968	132.012	



[20181125_164402 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.13 13:00	-0.030 (ts = 0.010)

[20181125_164402 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.13 21:00)

[20181125_164402 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.13 21:00)

[20181125_164402 / libfx_2.py:540] (j4 : N) d0 ==> -0.014 (2017.11.13 21:00)

[20181125_164402 / libfx_2.py:631] (j5 : N)
e0.price_Close = 132.050
dat['price_start'] = 131.965
ts_DownBar_For_A1__Price = 131.965 (2017.11.13 21:00)

[20181125_164402 / libfx_2.py:654] (j5 : N : 1) dat ==> updated
e0.price_Close = 132.050
dat['price_current'] = 132.050
dat['index_current'] = 6
(2017.11.13 21:00)

[20181125_164402 / libfx_2.py:216] start for-loop ------------------- (6)

[20181125_164402 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.13 22:00)

[20181125_164402 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 15:00)

[20181125_164402 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (6)

[20181125_164402 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 14:00

[20181125_164402 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = -0.009 (UTC = 2017.11.13 14:00)
<avg values>
132.088	132.038	131.968	132.012	132.057	



[20181125_164402 / libfx_2.py:2170] [is_Trend__Flat] (j2 : Y) 2017.11.13 14:00	-0.009 (ts = 0.010)

[20181125_164402 / libfx_2.py:447] (j1 : Y : 1 / j1.1 : Y) trend --> flat (2017.11.13 22:00)

[20181125_164402 / libfx_2.py:480] (j1 : Y : 1 / j1.1 : Y : 1) dat --> reset done

[20181125_164402 / libfx_2.py:216] start for-loop ------------------- (7)

[20181125_164402 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.13 23:00)

[20181125_164402 / libfx_2.py:286] (j2 : Y) d0 => 0 (d0 = 0.063)

[20181125_164402 / libfx_2.py:321] (j2 : Y : 1) dat --> set (2017.11.13 23:00)

[20181125_164402 / libfx_2.py:216] start for-loop ------------------- (8)

[20181125_164402 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 00:00)

[20181125_164402 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 17:00)

[20181125_164402 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (8)

[20181125_164402 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 16:00

[20181125_164402 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.076 (UTC = 2017.11.13 16:00)
<avg values>
131.968	132.012	132.057	132.148	132.281	



[20181125_164402 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.13 16:00	0.076 (ts = 0.010)

[20181125_164402 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 00:00)

[20181125_164403 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 00:00)

[20181125_164403 / libfx_2.py:678] (j4 : Y) d0 ==> 0.083 (2017.11.14 00:00)

[20181125_164403 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.14 00:00)
dat[price_anchor] = 132.396
dat[index_anchor] = 9
dat[price_current] = 132.396
dat[index_current] = 9

[20181125_164403 / libfx_2.py:216] start for-loop ------------------- (9)

[20181125_164403 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 01:00)

[20181125_164403 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 18:00)

[20181125_164403 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (9)

[20181125_164403 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 17:00

[20181125_164403 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.091 (UTC = 2017.11.13 17:00)
<avg values>
132.012	132.057	132.148	132.281	132.354	



[20181125_164403 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.13 17:00	0.091 (ts = 0.010)

[20181125_164403 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 01:00)

[20181125_164403 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 01:00)

[20181125_164403 / libfx_2.py:678] (j4 : Y) d0 ==> 0.045 (2017.11.14 01:00)

[20181125_164403 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.14 01:00)
dat[price_anchor] = 132.440
dat[index_anchor] = 10
dat[price_current] = 132.440
dat[index_current] = 10

[20181125_164403 / libfx_2.py:216] start for-loop ------------------- (10)

[20181125_164403 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 02:00)

[20181125_164403 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 19:00)

[20181125_164403 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (10)

[20181125_164403 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 18:00

[20181125_164403 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.093 (UTC = 2017.11.13 18:00)
<avg values>
132.057	132.148	132.281	132.354	132.418	



[20181125_164403 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.13 18:00	0.093 (ts = 0.010)

[20181125_164403 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 02:00)

[20181125_164403 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 02:00)

[20181125_164403 / libfx_2.py:678] (j4 : Y) d0 ==> 0.074 (2017.11.14 02:00)

[20181125_164403 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.14 02:00)
dat[price_anchor] = 132.512
dat[index_anchor] = 11
dat[price_current] = 132.512
dat[index_current] = 11

[20181125_164403 / libfx_2.py:216] start for-loop ------------------- (11)

[20181125_164403 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 03:00)

[20181125_164403 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 20:00)

[20181125_164403 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (11)

[20181125_164403 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 19:00

[20181125_164403 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.079 (UTC = 2017.11.13 19:00)
<avg values>
132.148	132.281	132.354	132.418	132.475	



[20181125_164403 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.13 19:00	0.079 (ts = 0.010)

[20181125_164403 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 03:00)

[20181125_164403 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 03:00)

[20181125_164403 / libfx_2.py:678] (j4 : Y) d0 ==> 0.007 (2017.11.14 03:00)

[20181125_164403 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.14 03:00)
dat[price_anchor] = 132.516
dat[index_anchor] = 12
dat[price_current] = 132.516
dat[index_current] = 12

[20181125_164403 / libfx_2.py:216] start for-loop ------------------- (12)

[20181125_164404 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 04:00)

[20181125_164404 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 21:00)

[20181125_164404 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (12)

[20181125_164404 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 20:00

[20181125_164404 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.058 (UTC = 2017.11.13 20:00)
<avg values>
132.281	132.354	132.418	132.475	132.512	



[20181125_164404 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.13 20:00	0.058 (ts = 0.010)

[20181125_164404 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 04:00)

[20181125_164404 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 04:00)

[20181125_164404 / libfx_2.py:540] (j4 : N) d0 ==> -0.020 (2017.11.14 04:00)

[20181125_164404 / libfx_2.py:631] (j5 : N)
e0.price_Close = 132.497
dat['price_start'] = 132.249
ts_DownBar_For_A1__Price = 132.249 (2017.11.14 04:00)

[20181125_164404 / libfx_2.py:654] (j5 : N : 1) dat ==> updated
e0.price_Close = 132.497
dat['price_current'] = 132.497
dat['index_current'] = 13
(2017.11.14 04:00)

[20181125_164404 / libfx_2.py:216] start for-loop ------------------- (13)

[20181125_164404 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 05:00)

[20181125_164404 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 22:00)

[20181125_164404 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (13)

[20181125_164404 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 21:00

[20181125_164404 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.040 (UTC = 2017.11.13 21:00)
<avg values>
132.354	132.418	132.475	132.512	132.507	



[20181125_164404 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.13 21:00	0.040 (ts = 0.010)

[20181125_164404 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 05:00)

[20181125_164404 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 05:00)

[20181125_164404 / libfx_2.py:678] (j4 : Y) d0 ==> 0.047 (2017.11.14 05:00)

[20181125_164404 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.14 05:00)
dat[price_anchor] = 132.545
dat[index_anchor] = 14
dat[price_current] = 132.545
dat[index_current] = 14

[20181125_164404 / libfx_2.py:216] start for-loop ------------------- (14)

[20181125_164404 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 06:00)

[20181125_164404 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.13 23:00)

[20181125_164404 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (14)

[20181125_164404 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 22:00

[20181125_164404 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.024 (UTC = 2017.11.13 22:00)
<avg values>
132.418	132.475	132.512	132.507	132.522	



[20181125_164404 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.13 22:00	0.024 (ts = 0.010)

[20181125_164404 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 06:00)

[20181125_164404 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 06:00)

[20181125_164404 / libfx_2.py:678] (j4 : Y) d0 ==> 0.003 (2017.11.14 06:00)

[20181125_164404 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.14 06:00)
dat[price_anchor] = 132.551
dat[index_anchor] = 15
dat[price_current] = 132.551
dat[index_current] = 15

[20181125_164404 / libfx_2.py:216] start for-loop ------------------- (15)

[20181125_164404 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 07:00)

[20181125_164404 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 00:00)

[20181125_164404 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (15)

[20181125_164404 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.13 23:00

[20181125_164404 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.016 (UTC = 2017.11.13 23:00)
<avg values>
132.475	132.512	132.507	132.522	132.549	



[20181125_164404 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.13 23:00	0.016 (ts = 0.010)

[20181125_164404 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 07:00)

[20181125_164404 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 07:00)

[20181125_164404 / libfx_2.py:540] (j4 : N) d0 ==> -0.018 (2017.11.14 07:00)

[20181125_164404 / libfx_2.py:631] (j5 : N)
e0.price_Close = 132.510
dat['price_start'] = 132.249
ts_DownBar_For_A1__Price = 132.249 (2017.11.14 07:00)

[20181125_164404 / libfx_2.py:654] (j5 : N : 1) dat ==> updated
e0.price_Close = 132.510
dat['price_current'] = 132.510
dat['index_current'] = 16
(2017.11.14 07:00)

[20181125_164404 / libfx_2.py:216] start for-loop ------------------- (16)

[20181125_164404 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 08:00)

[20181125_164404 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 01:00)

[20181125_164405 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (16)

[20181125_164405 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 00:00

[20181125_164405 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.006 (UTC = 2017.11.14 00:00)
<avg values>
132.512	132.507	132.522	132.549	132.519	



[20181125_164405 / libfx_2.py:2170] [is_Trend__Flat] (j2 : Y) 2017.11.14 00:00	0.006 (ts = 0.010)

[20181125_164405 / libfx_2.py:447] (j1 : Y : 1 / j1.1 : Y) trend --> flat (2017.11.14 08:00)

[20181125_164405 / libfx_2.py:480] (j1 : Y : 1 / j1.1 : Y : 1) dat --> reset done

[20181125_164405 / libfx_2.py:216] start for-loop ------------------- (17)

[20181125_164405 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.14 09:00)

[20181125_164405 / libfx_2.py:286] (j2 : Y) d0 => 0 (d0 = 0.128)

[20181125_164405 / libfx_2.py:321] (j2 : Y : 1) dat --> set (2017.11.14 09:00)

[20181125_164405 / libfx_2.py:216] start for-loop ------------------- (18)

[20181125_164405 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 10:00)

[20181125_164405 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 03:00)

[20181125_164405 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (18)

[20181125_164405 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 02:00

[20181125_164405 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.008 (UTC = 2017.11.14 02:00)
<avg values>
132.522	132.549	132.519	132.513	132.580	



[20181125_164405 / libfx_2.py:2170] [is_Trend__Flat] (j2 : Y) 2017.11.14 02:00	0.008 (ts = 0.010)

[20181125_164405 / libfx_2.py:447] (j1 : Y : 1 / j1.1 : Y) trend --> flat (2017.11.14 10:00)

[20181125_164405 / libfx_2.py:480] (j1 : Y : 1 / j1.1 : Y : 1) dat --> reset done

[20181125_164405 / libfx_2.py:216] start for-loop ------------------- (19)

[20181125_164405 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.14 11:00)

[20181125_164405 / libfx_2.py:350] (j2 : N) d0 < 0 (d0 = -0.021)

[20181125_164405 / libfx_2.py:216] start for-loop ------------------- (20)

[20181125_164405 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.14 12:00)

[20181125_164405 / libfx_2.py:350] (j2 : N) d0 < 0 (d0 = -0.011)

[20181125_164405 / libfx_2.py:216] start for-loop ------------------- (21)

[20181125_164405 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.14 13:00)

[20181125_164405 / libfx_2.py:286] (j2 : Y) d0 => 0 (d0 = 0.030)

[20181125_164405 / libfx_2.py:321] (j2 : Y : 1) dat --> set (2017.11.14 13:00)

[20181125_164405 / libfx_2.py:216] start for-loop ------------------- (22)

[20181125_164405 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 14:00)

[20181125_164405 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 07:00)

[20181125_164405 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (22)

[20181125_164405 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 06:00

[20181125_164405 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.010 (UTC = 2017.11.14 06:00)
<avg values>
132.580	132.649	132.645	132.628	132.639	



[20181125_164406 / libfx_2.py:2170] [is_Trend__Flat] (j2 : Y) 2017.11.14 06:00	0.010 (ts = 0.010)

[20181125_164406 / libfx_2.py:447] (j1 : Y : 1 / j1.1 : Y) trend --> flat (2017.11.14 14:00)

[20181125_164406 / libfx_2.py:480] (j1 : Y : 1 / j1.1 : Y : 1) dat --> reset done

[20181125_164406 / libfx_2.py:216] start for-loop ------------------- (23)

[20181125_164406 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.14 15:00)

[20181125_164406 / libfx_2.py:350] (j2 : N) d0 < 0 (d0 = -0.081)

[20181125_164406 / libfx_2.py:216] start for-loop ------------------- (24)

[20181125_164406 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.14 16:00)

[20181125_164406 / libfx_2.py:286] (j2 : Y) d0 => 0 (d0 = 0.370)

[20181125_164406 / libfx_2.py:321] (j2 : Y : 1) dat --> set (2017.11.14 16:00)

[20181125_164406 / libfx_2.py:216] start for-loop ------------------- (25)

[20181125_164406 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 17:00)

[20181125_164406 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 10:00)

[20181125_164406 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (25)

[20181125_164406 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 09:00

[20181125_164406 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.024 (UTC = 2017.11.14 09:00)
<avg values>
132.628	132.639	132.655	132.617	132.761	



[20181125_164406 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 09:00	0.024 (ts = 0.010)

[20181125_164406 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 17:00)

[20181125_164406 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 17:00)

[20181125_164406 / libfx_2.py:678] (j4 : Y) d0 ==> 0.388 (2017.11.14 17:00)

[20181125_164406 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.14 17:00)
dat[price_anchor] = 133.333
dat[index_anchor] = 26
dat[price_current] = 133.333
dat[index_current] = 26

[20181125_164406 / libfx_2.py:216] start for-loop ------------------- (26)

[20181125_164406 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 18:00)

[20181125_164406 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 11:00)

[20181125_164406 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (26)

[20181125_164406 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 10:00

[20181125_164406 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.111 (UTC = 2017.11.14 10:00)
<avg values>
132.639	132.655	132.617	132.761	133.139	



[20181125_164406 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 10:00	0.111 (ts = 0.010)

[20181125_164406 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 18:00)

[20181125_164406 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 18:00)

[20181125_164406 / libfx_2.py:540] (j4 : N) d0 ==> -0.021 (2017.11.14 18:00)

[20181125_164406 / libfx_2.py:631] (j5 : N)
e0.price_Close = 133.312
dat['price_start'] = 132.576
ts_DownBar_For_A1__Price = 132.576 (2017.11.14 18:00)

[20181125_164406 / libfx_2.py:654] (j5 : N : 1) dat ==> updated
e0.price_Close = 133.312
dat['price_current'] = 133.312
dat['index_current'] = 27
(2017.11.14 18:00)

[20181125_164406 / libfx_2.py:216] start for-loop ------------------- (27)

[20181125_164406 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 19:00)

[20181125_164406 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 12:00)

[20181125_164406 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (27)

[20181125_164406 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 11:00

[20181125_164406 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.186 (UTC = 2017.11.14 11:00)
<avg values>
132.655	132.617	132.761	133.139	133.322	



[20181125_164406 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 11:00	0.186 (ts = 0.010)

[20181125_164406 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 19:00)

[20181125_164406 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 19:00)

[20181125_164406 / libfx_2.py:540] (j4 : N) d0 ==> -0.073 (2017.11.14 19:00)

[20181125_164406 / libfx_2.py:631] (j5 : N)
e0.price_Close = 133.240
dat['price_start'] = 132.576
ts_DownBar_For_A1__Price = 132.576 (2017.11.14 19:00)

[20181125_164406 / libfx_2.py:654] (j5 : N : 1) dat ==> updated
e0.price_Close = 133.240
dat['price_current'] = 133.240
dat['index_current'] = 28
(2017.11.14 19:00)

[20181125_164406 / libfx_2.py:216] start for-loop ------------------- (28)

[20181125_164406 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 20:00)

[20181125_164406 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 13:00)

[20181125_164406 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (28)

[20181125_164406 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 12:00

[20181125_164406 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.188 (UTC = 2017.11.14 12:00)
<avg values>
132.617	132.761	133.139	133.322	133.276	



[20181125_164407 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 12:00	0.188 (ts = 0.010)

[20181125_164407 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 20:00)

[20181125_164407 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 20:00)

[20181125_164407 / libfx_2.py:540] (j4 : N) d0 ==> -0.001 (2017.11.14 20:00)

[20181125_164407 / libfx_2.py:631] (j5 : N)
e0.price_Close = 133.241
dat['price_start'] = 132.576
ts_DownBar_For_A1__Price = 132.576 (2017.11.14 20:00)

[20181125_164407 / libfx_2.py:654] (j5 : N : 1) dat ==> updated
e0.price_Close = 133.241
dat['price_current'] = 133.241
dat['index_current'] = 29
(2017.11.14 20:00)

[20181125_164407 / libfx_2.py:216] start for-loop ------------------- (29)

[20181125_164407 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 21:00)

[20181125_164407 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 14:00)

[20181125_164407 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (29)

[20181125_164407 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 13:00

[20181125_164407 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.110 (UTC = 2017.11.14 13:00)
<avg values>
132.761	133.139	133.322	133.276	133.242	



[20181125_164407 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 13:00	0.110 (ts = 0.010)

[20181125_164407 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 21:00)

[20181125_164407 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 21:00)

[20181125_164407 / libfx_2.py:678] (j4 : Y) d0 ==> 0.153 (2017.11.14 21:00)

[20181125_164407 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.14 21:00)
dat[price_anchor] = 133.395
dat[index_anchor] = 30
dat[price_current] = 133.395
dat[index_current] = 30

[20181125_164407 / libfx_2.py:216] start for-loop ------------------- (30)

[20181125_164407 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 22:00)

[20181125_164407 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 15:00)

[20181125_164407 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (30)

[20181125_164407 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 14:00

[20181125_164407 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.028 (UTC = 2017.11.14 14:00)
<avg values>
133.139	133.322	133.276	133.242	133.319	



[20181125_164407 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 14:00	0.028 (ts = 0.010)

[20181125_164407 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 22:00)

[20181125_164407 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 22:00)

[20181125_164407 / libfx_2.py:678] (j4 : Y) d0 ==> 0.101 (2017.11.14 22:00)

[20181125_164407 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.14 22:00)
dat[price_anchor] = 133.496
dat[index_anchor] = 31
dat[price_current] = 133.496
dat[index_current] = 31

[20181125_164407 / libfx_2.py:216] start for-loop ------------------- (31)

[20181125_164407 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.14 23:00)

[20181125_164407 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 16:00)

[20181125_164407 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (31)

[20181125_164407 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 15:00

[20181125_164407 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.029 (UTC = 2017.11.14 15:00)
<avg values>
133.322	133.276	133.242	133.319	133.446	



[20181125_164408 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 15:00	0.029 (ts = 0.010)

[20181125_164408 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.14 23:00)

[20181125_164408 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.14 23:00)

[20181125_164408 / libfx_2.py:540] (j4 : N) d0 ==> -0.122 (2017.11.14 23:00)

[20181125_164408 / libfx_2.py:631] (j5 : N)
e0.price_Close = 133.375
dat['price_start'] = 132.576
ts_DownBar_For_A1__Price = 132.576 (2017.11.14 23:00)

[20181125_164408 / libfx_2.py:654] (j5 : N : 1) dat ==> updated
e0.price_Close = 133.375
dat['price_current'] = 133.375
dat['index_current'] = 32
(2017.11.14 23:00)

[20181125_164408 / libfx_2.py:216] start for-loop ------------------- (32)

[20181125_164408 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 00:00)

[20181125_164408 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 17:00)

[20181125_164408 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (32)

[20181125_164408 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 16:00

[20181125_164408 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.052 (UTC = 2017.11.14 16:00)
<avg values>
133.276	133.242	133.319	133.446	133.436	



[20181125_164408 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 16:00	0.052 (ts = 0.010)

[20181125_164408 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 00:00)

[20181125_164408 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 00:00)

[20181125_164408 / libfx_2.py:678] (j4 : Y) d0 ==> 0.003 (2017.11.15 00:00)

[20181125_164408 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.15 00:00)
dat[price_anchor] = 133.496
dat[index_anchor] = 31
dat[price_current] = 133.371
dat[index_current] = 33

[20181125_164408 / libfx_2.py:216] start for-loop ------------------- (33)

[20181125_164408 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 01:00)

[20181125_164408 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 18:00)

[20181125_164408 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (33)

[20181125_164408 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 17:00

[20181125_164408 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.037 (UTC = 2017.11.14 17:00)
<avg values>
133.242	133.319	133.446	133.436	133.370	



[20181125_164408 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 17:00	0.037 (ts = 0.010)

[20181125_164408 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 01:00)

[20181125_164408 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 01:00)

[20181125_164408 / libfx_2.py:678] (j4 : Y) d0 ==> 0.146 (2017.11.15 01:00)

[20181125_164408 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.15 01:00)
dat[price_anchor] = 133.518
dat[index_anchor] = 34
dat[price_current] = 133.518
dat[index_current] = 34

[20181125_164408 / libfx_2.py:216] start for-loop ------------------- (34)

[20181125_164408 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 02:00)

[20181125_164408 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 19:00)

[20181125_164408 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (34)

[20181125_164408 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 18:00

[20181125_164408 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.018 (UTC = 2017.11.14 18:00)
<avg values>
133.319	133.446	133.436	133.370	133.445	



[20181125_164408 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 18:00	0.018 (ts = 0.010)

[20181125_164408 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 02:00)

[20181125_164408 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 02:00)

[20181125_164408 / libfx_2.py:678] (j4 : Y) d0 ==> 0.096 (2017.11.15 02:00)

[20181125_164408 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.15 02:00)
dat[price_anchor] = 133.615
dat[index_anchor] = 35
dat[price_current] = 133.615
dat[index_current] = 35

[20181125_164408 / libfx_2.py:216] start for-loop ------------------- (35)

[20181125_164408 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 03:00)

[20181125_164408 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 20:00)

[20181125_164408 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (35)

[20181125_164408 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 19:00

[20181125_164408 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.025 (UTC = 2017.11.14 19:00)
<avg values>
133.446	133.436	133.370	133.445	133.567	



[20181125_164408 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 19:00	0.025 (ts = 0.010)

[20181125_164408 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 03:00)

[20181125_164409 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 03:00)

[20181125_164409 / libfx_2.py:678] (j4 : Y) d0 ==> 0.153 (2017.11.15 03:00)

[20181125_164409 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.15 03:00)
dat[price_anchor] = 133.768
dat[index_anchor] = 36
dat[price_current] = 133.768
dat[index_current] = 36

[20181125_164409 / libfx_2.py:216] start for-loop ------------------- (36)

[20181125_164409 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 04:00)

[20181125_164409 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 21:00)

[20181125_164409 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (36)

[20181125_164409 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 20:00

[20181125_164409 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.071 (UTC = 2017.11.14 20:00)
<avg values>
133.436	133.370	133.445	133.567	133.692	



[20181125_164409 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 20:00	0.071 (ts = 0.010)

[20181125_164409 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 04:00)

[20181125_164409 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 04:00)

[20181125_164409 / libfx_2.py:540] (j4 : N) d0 ==> -0.032 (2017.11.15 04:00)

[20181125_164409 / libfx_2.py:631] (j5 : N)
e0.price_Close = 133.735
dat['price_start'] = 132.576
ts_DownBar_For_A1__Price = 132.576 (2017.11.15 04:00)

[20181125_164409 / libfx_2.py:654] (j5 : N : 1) dat ==> updated
e0.price_Close = 133.735
dat['price_current'] = 133.735
dat['index_current'] = 37
(2017.11.15 04:00)

[20181125_164409 / libfx_2.py:216] start for-loop ------------------- (37)

[20181125_164409 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 05:00)

[20181125_164409 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 22:00)

[20181125_164409 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (37)

[20181125_164409 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 21:00

[20181125_164409 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.101 (UTC = 2017.11.14 21:00)
<avg values>
133.370	133.445	133.567	133.692	133.751	



[20181125_164409 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 21:00	0.101 (ts = 0.010)

[20181125_164410 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 05:00)

[20181125_164410 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 05:00)

[20181125_164410 / libfx_2.py:678] (j4 : Y) d0 ==> 0.035 (2017.11.15 05:00)

[20181125_164410 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.15 05:00)
dat[price_anchor] = 133.771
dat[index_anchor] = 38
dat[price_current] = 133.771
dat[index_current] = 38

[20181125_164410 / libfx_2.py:216] start for-loop ------------------- (38)

[20181125_164410 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 06:00)

[20181125_164410 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.14 23:00)

[20181125_164410 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (38)

[20181125_164410 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 22:00

[20181125_164410 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.080 (UTC = 2017.11.14 22:00)
<avg values>
133.445	133.567	133.692	133.751	133.753	



[20181125_164410 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 22:00	0.080 (ts = 0.010)

[20181125_164410 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 06:00)

[20181125_164410 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 06:00)

[20181125_164410 / libfx_2.py:678] (j4 : Y) d0 ==> 0.072 (2017.11.15 06:00)

[20181125_164410 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.15 06:00)
dat[price_anchor] = 133.844
dat[index_anchor] = 39
dat[price_current] = 133.844
dat[index_current] = 39

[20181125_164410 / libfx_2.py:216] start for-loop ------------------- (39)

[20181125_164410 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 07:00)

[20181125_164410 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.15 00:00)

[20181125_164410 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (39)

[20181125_164410 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.14 23:00

[20181125_164410 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.054 (UTC = 2017.11.14 23:00)
<avg values>
133.567	133.692	133.751	133.753	133.808	



[20181125_164410 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.14 23:00	0.054 (ts = 0.010)

[20181125_164410 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 07:00)

[20181125_164410 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 07:00)

[20181125_164410 / libfx_2.py:678] (j4 : Y) d0 ==> 0.101 (2017.11.15 07:00)

[20181125_164410 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.15 07:00)
dat[price_anchor] = 133.870
dat[index_anchor] = 40
dat[price_current] = 133.870
dat[index_current] = 40

[20181125_164410 / libfx_2.py:216] start for-loop ------------------- (40)

[20181125_164410 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 08:00)

[20181125_164410 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.15 01:00)

[20181125_164410 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (40)

[20181125_164410 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.15 00:00

[20181125_164410 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.031 (UTC = 2017.11.15 00:00)
<avg values>
133.692	133.751	133.753	133.808	133.820	



[20181125_164410 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.15 00:00	0.031 (ts = 0.010)

[20181125_164410 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 08:00)

[20181125_164410 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 08:00)

[20181125_164410 / libfx_2.py:540] (j4 : N) d0 ==> -0.143 (2017.11.15 08:00)

[20181125_164410 / libfx_2.py:631] (j5 : N)
e0.price_Close = 133.725
dat['price_start'] = 132.576
ts_DownBar_For_A1__Price = 132.576 (2017.11.15 08:00)

[20181125_164410 / libfx_2.py:654] (j5 : N : 1) dat ==> updated
e0.price_Close = 133.725
dat['price_current'] = 133.725
dat['index_current'] = 41
(2017.11.15 08:00)

[20181125_164410 / libfx_2.py:216] start for-loop ------------------- (41)

[20181125_164410 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 09:00)

[20181125_164410 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.15 02:00)

[20181125_164410 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (41)

[20181125_164410 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.15 01:00

[20181125_164410 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.016 (UTC = 2017.11.15 01:00)
<avg values>
133.751	133.753	133.808	133.820	133.796	



[20181125_164410 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.15 01:00	0.016 (ts = 0.010)

[20181125_164410 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 09:00)

[20181125_164410 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 09:00)

[20181125_164410 / libfx_2.py:678] (j4 : Y) d0 ==> 0.088 (2017.11.15 09:00)

[20181125_164411 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.15 09:00)
dat[price_anchor] = 133.870
dat[index_anchor] = 40
dat[price_current] = 133.815
dat[index_current] = 42

[20181125_164411 / libfx_2.py:216] start for-loop ------------------- (42)

[20181125_164411 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 10:00)

[20181125_164411 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.15 03:00)

[20181125_164411 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (42)

[20181125_164411 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.15 02:00

[20181125_164411 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = 0.002 (UTC = 2017.11.15 02:00)
<avg values>
133.753	133.808	133.820	133.796	133.771	



[20181125_164411 / libfx_2.py:2170] [is_Trend__Flat] (j2 : Y) 2017.11.15 02:00	0.002 (ts = 0.010)

[20181125_164411 / libfx_2.py:447] (j1 : Y : 1 / j1.1 : Y) trend --> flat (2017.11.15 10:00)

[20181125_164411 / libfx_2.py:480] (j1 : Y : 1 / j1.1 : Y : 1) dat --> reset done

[20181125_164411 / libfx_2.py:216] start for-loop ------------------- (43)

[20181125_164411 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.15 11:00)

[20181125_164411 / libfx_2.py:286] (j2 : Y) d0 => 0 (d0 = 0.003)

[20181125_164411 / libfx_2.py:321] (j2 : Y : 1) dat --> set (2017.11.15 11:00)

[20181125_164411 / libfx_2.py:216] start for-loop ------------------- (44)

[20181125_164411 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 12:00)

[20181125_164411 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.15 05:00)

[20181125_164411 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (44)

[20181125_164411 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.15 04:00

[20181125_164411 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = -0.082 (UTC = 2017.11.15 04:00)
<avg values>
133.820	133.796	133.771	133.647	133.483	



[20181125_164411 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.15 04:00	-0.082 (ts = 0.010)

[20181125_164411 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 12:00)

[20181125_164411 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 12:00)

[20181125_164411 / libfx_2.py:540] (j4 : N) d0 ==> -0.020 (2017.11.15 12:00)

[20181125_164411 / libfx_2.py:571] (j5 : Y) 
e0.price_Close = 133.464
ts_DownBar_For_A1__Price = 133.481 (2017.11.15 12:00)

[20181125_164411 / libfx_2.py:601] dat --> reset done

[20181125_164411 / libfx_2.py:216] start for-loop ------------------- (45)

[20181125_164411 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.15 13:00)

[20181125_164411 / libfx_2.py:286] (j2 : Y) d0 => 0 (d0 = 0.023)

[20181125_164411 / libfx_2.py:321] (j2 : Y : 1) dat --> set (2017.11.15 13:00)

[20181125_164411 / libfx_2.py:216] start for-loop ------------------- (46)

[20181125_164411 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 14:00)

[20181125_164411 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.15 07:00)

[20181125_164411 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (46)

[20181125_164411 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.15 06:00

[20181125_164412 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = -0.076 (UTC = 2017.11.15 06:00)
<avg values>
133.771	133.647	133.483	133.474	133.478	



[20181125_164412 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.15 06:00	-0.076 (ts = 0.010)

[20181125_164412 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 14:00)

[20181125_164412 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 14:00)

[20181125_164412 / libfx_2.py:540] (j4 : N) d0 ==> -0.076 (2017.11.15 14:00)

[20181125_164412 / libfx_2.py:571] (j5 : Y) 
e0.price_Close = 133.414
ts_DownBar_For_A1__Price = 133.466 (2017.11.15 14:00)

[20181125_164412 / libfx_2.py:601] dat --> reset done

[20181125_164412 / libfx_2.py:216] start for-loop ------------------- (47)

[20181125_164412 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.15 15:00)

[20181125_164412 / libfx_2.py:350] (j2 : N) d0 < 0 (d0 = -0.045)

[20181125_164412 / libfx_2.py:216] start for-loop ------------------- (48)

[20181125_164412 / libfx_2.py:255] (j1 : N) flg_Dat --> not set (False, 2017.11.15 16:00)

[20181125_164412 / libfx_2.py:286] (j2 : Y) d0 => 0 (d0 = 0.089)

[20181125_164412 / libfx_2.py:321] (j2 : Y : 1) dat --> set (2017.11.15 16:00)

[20181125_164412 / libfx_2.py:216] start for-loop ------------------- (49)

[20181125_164412 / libfx_2.py:383] (j1 : Y) flg_Dat ==> True (2017.11.15 17:00)

[20181125_164412 / libfx_2.py:405] (j1 : Y : 1 / j1.1) trend --> flat ? (UTC = 2017.11.15 10:00)

[20181125_164412 / libfx_2.py:2025] [is_Trend__Flat] (j1 : Y) equal or more than 5 (49)

[20181125_164412 / libfx_2.py:2049] [is_Trend__Flat] (j1 : Y : 1) get list : last N bars (len = 5 / L_2[-1] = UTC, 2017.11.15 09:00

[20181125_164412 / libfx_2.py:2122] [is_Trend__Flat] (j1 : Y : 4) get val : incli(a value) = -0.022 (UTC = 2017.11.15 09:00)
<avg values>
133.474	133.478	133.452	133.387	133.411	



[20181125_164412 / libfx_2.py:2189] [is_Trend__Flat] (j2 : N) 2017.11.15 09:00	-0.022 (ts = 0.010)

[20181125_164412 / libfx_2.py:427] (j1 : Y : 1 / j1.1 : N) trend --> NOT flat (2017.11.15 17:00)

[20181125_164412 / libfx_2.py:517] (j3 : N) flg_A1_tmp ==> False (2017.11.15 17:00)

[20181125_164412 / libfx_2.py:678] (j4 : Y) d0 ==> 0.122 (2017.11.15 17:00)

[20181125_164412 / libfx_2.py:720] (j4 : Y : 2) dat ==> updated (2017.11.15 17:00)
dat[price_anchor] = 133.580
dat[index_anchor] = 50
dat[price_current] = 133.580
dat[index_current] = 50

[20181125_164412 / libfx_2.py:771] FINAL REPORT --------------------
cntOf_Total = 50
cntOf_J4_Y = 18

